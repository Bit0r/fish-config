#!/usr/bin/env python3
from __future__ import annotations

from fire import Fire
from plumbum.cmd import dig
from rich.console import Console


def dig_color(*args):
    """
    Execute dig command with colored output, using different colors for different parts.

    Args:
        args (list, optional): Additional arguments for dig command. Defaults to None.
    """

    def print_by_len(line: str, str_lens: list[int] | str, map_color_idx=None):
        if isinstance(str_lens, str):
            str_lens = [int(x) for x in str_lens.split()]

        cols = line.split()
        for idx, col in enumerate(cols):
            color_idx = idx + 1
            color_idx = map_color_idx(color_idx) if map_color_idx else color_idx

            str_len = str_lens[idx]

            console.print(
                f'{col:<{str_len}}', style=f'color({color_idx})', end=' ', height=False
            )
        console.print()

    try:
        console = Console(soft_wrap=True, height=False)
        # Run dig command and capture its output
        output = dig[*args]()

        # Split output into lines
        lines = output.split('\n')

        for line in lines:
            if line.startswith(';;'):
                # Header/section lines in cyan
                # console.print(f'[cyan]{line}[/cyan]')
                console.print(line, style='cyan')
            elif line.startswith('; '):
                # Comment lines in magenta
                # console.print(f'[magenta]{line}[/magenta]')
                console.print(line, style='magenta')
            elif line.startswith(';'):
                # Footer lines in yellow
                # Data lines in different colors
                str_lens = '37 2 5 32 32 8 8 8 8 8 8 8'
                print_by_len(line, str_lens, lambda idx: idx + 1 if idx >= 2 else idx)
            else:
                # Data lines in different colors
                str_lens = '32 4 2 5 32 32 8 8 8 8 8 8 8'
                print_by_len(line, str_lens)
    except Exception as e:
        console = Console(stderr=True)
        console.print(f'Error executing dig: {e}', style='red')


if __name__ == '__main__':
    Fire(dig_color)
